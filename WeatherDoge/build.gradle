def gitRev = {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return 'nogit'
    }
}

Closure<String[]> getVersionDef = {
    new File('WeatherDoge/versionDef.txt').text.trim().split('\\r?\\n')
}

Closure<String> getVersionNameSuffix = { flavor ->
    flavor + '-' + gitRev()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdk 33
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        applicationId "com.versobit.weatherdoge"
        versionCode getVersionDef()[0].toInteger()
        versionName getVersionDef()[1]
        buildConfigField 'String', 'FLAVOR_PLAY', '"play"'
        buildConfigField 'String', 'FLAVOR_FOSS', '"foss"'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE.txt', 'META-INF/NOTICE.txt']
        }
    }
    flavorDimensions 'version'
    productFlavors {
        play {
            versionNameSuffix getVersionNameSuffix('p')
        }
        foss {
            dimension 'version'
            applicationIdSuffix '.foss'
            versionNameSuffix getVersionNameSuffix('f')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.versobit.weatherdoge'
}

dependencies {
    playImplementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'com.google.android.material:material:1.1.0-alpha03'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.plattysoft.leonids:LeonidsLib:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    def work_version = '1.0.0-beta03'
    implementation "android.arch.work:work-runtime:$work_version"
    implementation "android.arch.work:work-runtime-ktx:$work_version"
}

// Find and apply the signing file
// See signing.template.gradle for more information
Properties localProps = new Properties()
localProps.load(project.rootProject.file('local.properties').newDataInputStream())
String signingFile = localProps.getProperty('signing.file')
if (signingFile != null) {
    if (new File(signingFile).exists()) {
        apply from: signingFile
    } else {
        throw new InvalidUserDataException('Signing configuration file does not exist: ' +
                signingFile)
    }
} else {
    logger.log(LogLevel.WARN, 'WARNING: No signing configuration file defined.')
}
repositories {
    mavenCentral()
}
